/**
 * Author: Saw Xue Zheng
 * Description: Interfaces the StudentSchedule Form Dialog Box
 */
package Form;

import Form.Classes.Course;
import Form.Classes.RoomListing;
import Form.Classes.Student;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

/**
 *
 * @author User
 */
public class StudSchedule extends javax.swing.JDialog implements Runnable{
    private String title = "Student's Schedule";
    /**
     * Creates new form Schedule
     */
    public StudSchedule(java.awt.Frame parent, boolean modal, MainFrame mframe, Student s, RoomListing r) {
        super(parent, modal);
        this.mframe = mframe;
        this.s = s;
        this.r = r;
        this.setTitle(title);
        //Redirect system.out to ps
         baos = new ByteArrayOutputStream();
         ps = new PrintStream(baos);
         System.setOut(ps);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        rmv_course_but = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusTraversalPolicyProvider(true);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        jLabel1.setText("Student ID :");

        jLabel2.setText("Name         : ");

        jLabel3.setText("Phone No. :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText(s.getFirstName() + " " + s.getLastName());
        jLabel4.setText(String.valueOf(s.getStudId()));
        jLabel6.setText(s.getPhoneNum());

        this.course_table = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null,null},
            },
            new String [] {
                "Name", "Start Time", "End Time", "Room", "# Enrolled"
            }){
                @Override
                public boolean isCellEditable(int row, int column)
                {
                    return false;
                }
            };
            jTable4.setModel(course_table);
            jTable4.setShowGrid(true);
            jTable4.setAutoCreateRowSorter(true);
            course_table.setRowCount(7);
            refresh_course_table();
            jTable4.getTableHeader().setReorderingAllowed(false);
            jScrollPane5.setViewportView(jTable4);

            rmv_course_but.setText("Unschedule a course");
            rmv_course_but.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rmv_course_butActionPerformed(evt);
                }
            });

            jButton1.setText("Back");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane5)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rmv_course_but)))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rmv_course_but)
                        .addComponent(jButton1))
                    .addContainerGap())
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rmv_course_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmv_course_butActionPerformed
        // TODO add your handling code here:
        int index = jTable4.getSelectedRow();
        unscheduleCourse(s,index , r);
        refresh_course_table();
        mframe.refresh_course_table();
        mframe.refresh_stud_table();
    }//GEN-LAST:event_rmv_course_butActionPerformed

     public  void unscheduleCourse(Student stud, int course_index, RoomListing rl) {
        Course c = rl.getCourse2(course_index);

        if (c != null) {
            stud.removeCoursefromSchedule(c);
            c.getStudentList().remove(stud);
        } else {
            System.out.println("Student is not scheduled in the course.");
        }
    }
    /**
     * @param args the command line arguments
     */
    
  public void refresh_course_table()
    {
        course_table = new javax.swing.table.DefaultTableModel(
                        new Object[1][5],
                        new String[]{
                            "Name", "Start Time", "End Time", "Room", "# Enrolled"
                        }) {
                    @Override
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                };
            
            course_table.setRowCount(0);
            
           
            //check if the size of student list is greater than the maximum table size
            if (r.getCourseList().size() < 7) {
                
                
                //add to table from student list
                for (Course c : s.getStudentSchedule().getCourseInSchedule()) {
                     
                    course_table.addRow(new Object[]{c.getCourseName(),c.getStartTime(),c.getEndTime(),c.getRoomNum(),c.getStudentList().size()});
                }
                
                course_table.setRowCount(7);
                
            }
            else
            {
                
                //add to table from student list
                for (Course c : s.getStudentSchedule().getCourseInSchedule()) {
                    course_table.addRow(new Object[]{c.getCourseName(),c.getStartTime(),c.getEndTime(),c.getRoomNum(),c.getStudentList().size()});
                }
            }
            
            if (s.getStudentSchedule().getCourseInSchedule().isEmpty())
            {
                this.SetEnableRemoveCourseButton(false);
            }
            else
            {
                SetEnableRemoveCourseButton(true);
            }
            
            jTable4.setModel(course_table);
            jTable4.validate();
    }
  
    @Override
    public void run()
    {
        
        this.setVisible(true);
        this.setFocusable(true);
    }
    
   public void SetEnableRemoveCourseButton(boolean b)
    {
        this.rmv_course_but.setEnabled(b);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable4;
    private javax.swing.table.DefaultTableModel course_table;
    private javax.swing.JButton rmv_course_but;
    // End of variables declaration//GEN-END:variables
    private MainFrame mframe;
    private Student s;
    private RoomListing r;
    private ByteArrayOutputStream baos;
    private PrintStream ps;
    private PrintStream old = System.out;
}
